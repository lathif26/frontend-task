{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lathifa Thasneem\\\\OneDrive\\\\Desktop\\\\Frontend Task\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RedditCard = _ref => {\n  _s();\n  let {\n    title,\n    selfText,\n    url,\n    score\n  } = _ref;\n  const [formattedText, setFormattedText] = useState(\"\");\n  useEffect(() => {\n    const htmlParser = new DOMParser();\n    const parsedText = htmlParser.parseFromString(selfText, \"text/html\").body.textContent;\n    setFormattedText(parsedText);\n  }, [selfText]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reddit-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), selfText && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `content ${selfText.includes(\"<ul>\") ? \"points\" : \"text\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: selfText\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), formattedText && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: formattedText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: url,\n      target: \"_blank\",\n      rel: \"noreferrer\",\n      children: url\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(RedditCard, \"Si0R7Ovv3lq00pPI71sHrz67CBw=\");\n_c = RedditCard;\nconst RedditFeed = () => {\n  _s2();\n  const [redditData, setRedditData] = useState([]);\n  useEffect(() => {\n    fetch(\"https://www.reddit.com/r/reactjs.json\").then(response => response.json()).then(data => setRedditData(data.data.children)).catch(error => console.log(error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reddit-feed\",\n    children: redditData.map(post => /*#__PURE__*/_jsxDEV(RedditCard, {\n      title: post.data.title,\n      selfText: post.data.selftext_html,\n      url: post.data.url,\n      score: post.data.score\n    }, post.data.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s2(RedditFeed, \"0X9KzCwm4DbxtzjOPdh5/pfFmOA=\");\n_c2 = RedditFeed;\nexport default RedditFeed;\nvar _c, _c2;\n$RefreshReg$(_c, \"RedditCard\");\n$RefreshReg$(_c2, \"RedditFeed\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","RedditCard","_ref","_s","title","selfText","url","score","formattedText","setFormattedText","htmlParser","DOMParser","parsedText","parseFromString","body","textContent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","includes","dangerouslySetInnerHTML","__html","href","target","rel","_c","RedditFeed","_s2","redditData","setRedditData","fetch","then","response","json","data","catch","error","console","log","map","post","selftext_html","id","_c2","$RefreshReg$"],"sources":["C:/Users/Lathifa Thasneem/OneDrive/Desktop/Frontend Task/my-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst RedditCard = ({ title, selfText, url, score }) => {\n  const [formattedText, setFormattedText] = useState(\"\");\n\n  useEffect(() => {\n    const htmlParser = new DOMParser();\n    const parsedText = htmlParser.parseFromString(selfText, \"text/html\").body\n      .textContent;\n    setFormattedText(parsedText);\n  }, [selfText]);\n\n  return (\n    <div className=\"reddit-card\">\n      <h2>{title}</h2>\n      {selfText && (\n        <div\n          className={`content ${selfText.includes(\"<ul>\") ? \"points\" : \"text\"}`}\n        >\n          <div dangerouslySetInnerHTML={{ __html: selfText }} />\n          {formattedText && <p>{formattedText}</p>}\n        </div>\n      )}\n      <a href={url} target=\"_blank\" rel=\"noreferrer\">\n        {url}\n      </a>\n      <p>Score: {score}</p>\n    </div>\n  );\n};\n\nconst RedditFeed = () => {\n  const [redditData, setRedditData] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://www.reddit.com/r/reactjs.json\")\n      .then((response) => response.json())\n      .then((data) => setRedditData(data.data.children))\n      .catch((error) => console.log(error));\n  }, []);\n\n  return (\n    <div className=\"reddit-feed\">\n      {redditData.map((post) => (\n        <RedditCard\n          key={post.data.id}\n          title={post.data.title}\n          selfText={post.data.selftext_html}\n          url={post.data.url}\n          score={post.data.score}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default RedditFeed;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
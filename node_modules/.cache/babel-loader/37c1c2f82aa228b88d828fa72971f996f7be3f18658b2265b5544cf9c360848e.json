{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lathifa Thasneem\\\\OneDrive\\\\Desktop\\\\Frontend Task\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport DOMPurify from 'dompurify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reddit = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    fetch('https://www.reddit.com/r/reactjs.json').then(res => res.json()).then(data => setPosts(data.data.children)).catch(console.log);\n  }, []);\n  const sanitizeHtml = html => ({\n    __html: DOMPurify.sanitize(html)\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reddit-container\",\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reddit-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: post.data.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        dangerouslySetInnerHTML: sanitizeHtml(post.data.selftext_html)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: post.data.url,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Read more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reddit-score\",\n        children: post.data.score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)]\n    }, post.data.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(Reddit, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = Reddit;\nexport default Reddit;\nvar _c;\n$RefreshReg$(_c, \"Reddit\");","map":{"version":3,"names":["React","useState","useEffect","DOMPurify","jsxDEV","_jsxDEV","Reddit","_s","posts","setPosts","fetch","then","res","json","data","children","catch","console","log","sanitizeHtml","html","__html","sanitize","className","map","post","title","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","selftext_html","href","url","target","rel","score","id","_c","$RefreshReg$"],"sources":["C:/Users/Lathifa Thasneem/OneDrive/Desktop/Frontend Task/my-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport DOMPurify from 'dompurify';\n\nconst Reddit = () => {\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    fetch('https://www.reddit.com/r/reactjs.json')\n      .then(res => res.json())\n      .then(data => setPosts(data.data.children))\n      .catch(console.log);\n  }, []);\n\n  const sanitizeHtml = html => ({\n    __html: DOMPurify.sanitize(html)\n  });\n\n  return (\n    <div className=\"reddit-container\">\n      {posts.map(post => (\n        <div key={post.data.id} className=\"reddit-card\">\n          <h2>{post.data.title}</h2>\n          <div dangerouslySetInnerHTML={sanitizeHtml(post.data.selftext_html)} />\n          <a href={post.data.url} target=\"_blank\" rel=\"noopener noreferrer\">Read more</a>\n          <div className=\"reddit-score\">{post.data.score}</div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Reddit;\n\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACdQ,KAAK,CAAC,uCAAuC,CAAC,CAC3CC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAIL,QAAQ,CAACK,IAAI,CAACA,IAAI,CAACC,QAAQ,CAAC,CAAC,CAC1CC,KAAK,CAACC,OAAO,CAACC,GAAG,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,YAAY,GAAGC,IAAI,KAAK;IAC5BC,MAAM,EAAElB,SAAS,CAACmB,QAAQ,CAACF,IAAI;EACjC,CAAC,CAAC;EAEF,oBACEf,OAAA;IAAKkB,SAAS,EAAC,kBAAkB;IAAAR,QAAA,EAC9BP,KAAK,CAACgB,GAAG,CAACC,IAAI,iBACbpB,OAAA;MAAwBkB,SAAS,EAAC,aAAa;MAAAR,QAAA,gBAC7CV,OAAA;QAAAU,QAAA,EAAKU,IAAI,CAACX,IAAI,CAACY;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eAC1BzB,OAAA;QAAK0B,uBAAuB,EAAEZ,YAAY,CAACM,IAAI,CAACX,IAAI,CAACkB,aAAa;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACvEzB,OAAA;QAAG4B,IAAI,EAAER,IAAI,CAACX,IAAI,CAACoB,GAAI;QAACC,MAAM,EAAC,QAAQ;QAACC,GAAG,EAAC,qBAAqB;QAAArB,QAAA,EAAC;MAAS;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,eAC/EzB,OAAA;QAAKkB,SAAS,EAAC,cAAc;QAAAR,QAAA,EAAEU,IAAI,CAACX,IAAI,CAACuB;MAAK;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO;IAAA,GAJ7CL,IAAI,CAACX,IAAI,CAACwB,EAAE;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAMvB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV,CAAC;AAACvB,EAAA,CA1BID,MAAM;AAAAiC,EAAA,GAANjC,MAAM;AA4BZ,eAAeA,MAAM;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}